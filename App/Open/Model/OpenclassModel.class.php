<?php
namespace Open\Model;

use Common\Model\MxModel;

class OpenclassModel    extends MxModel
{
    protected $tableName                =   'publicclass';

    protected $_link                    =   [
        'livecate_info'     =>  [
            'mapping_type'      =>  self::BELONGS_TO,
            'class_name'        =>  'Livecate',
            'parent_key'        =>  'id',
            'mapping_fields'    =>  'id,cate_name,desc',
            'foreign_key'       =>  'livecate',
            'condition'         =>  ''
        ],
    ];

    public function lists ($where=null,$order=null,$limit)
    {
        $_where         =   [];
        $_order         =   [];
        $_limit         =   [];
        if( !is_null($where) && is_array($where) )
            $_where         =   array_merge( $where, $_where );
        if( !is_null($order) ){
            $_order         =   is_string($order)
                ?   $order
                :   implode(',', array_filter($order) );
        }
        $builder            =   $this->field('playback_addr,content',true);
        $_where && $builder->where( $_where );
        $_order && $builder->order( $_order );
        $builder->page( $limit['page'] )->limit( $limit['limit'] );
        return $builder->select();
    }

    protected function _after_find(&$result, $options)
    {
        parent::_after_find($result, $options); // TODO: Change the autogenerated stub
        $result['content']      =   htmlspecialchars_decode($result['content']);
        $as_fields              =   'id,cate_name,desc';
        $result['livecontent_info']     =   $this->relation_livecontent($result['livecontent'], $as_fields );
    }

    protected function relation_livecontent ($content_ids, $fields, $order='id desc')
    {
        if( !$content_ids )
            return [];
        $content_ids                =   explode( ',', $content_ids );
        $model                      =   new LivecontentModel();
        $contents                   =   $model->field($fields)
            ->where(['id'=>['IN',$content_ids]])
            ->order($order)
            ->select();
        return $contents;
    }
}